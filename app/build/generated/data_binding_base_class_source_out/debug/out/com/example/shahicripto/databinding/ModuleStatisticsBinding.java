// Generated by view binder compiler. Do not edit!
package com.example.shahicripto.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shahicripto.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ModuleStatisticsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView txtStatisticsAlgoritm;

  @NonNull
  public final TextView txtStatisticsChange;

  @NonNull
  public final TextView txtStatisticsHigh;

  @NonNull
  public final TextView txtStatisticsLow;

  @NonNull
  public final TextView txtStatisticsMarketCap;

  @NonNull
  public final TextView txtStatisticsOpenPrice;

  @NonNull
  public final TextView txtStatisticsSupply;

  @NonNull
  public final TextView txtStatisticsTotalVolume;

  private ModuleStatisticsBinding(@NonNull LinearLayout rootView, @NonNull Guideline guideline2,
      @NonNull TextView textView10, @NonNull TextView textView12, @NonNull TextView textView14,
      @NonNull TextView textView16, @NonNull TextView textView2, @NonNull TextView textView4,
      @NonNull TextView textView7, @NonNull TextView txtStatisticsAlgoritm,
      @NonNull TextView txtStatisticsChange, @NonNull TextView txtStatisticsHigh,
      @NonNull TextView txtStatisticsLow, @NonNull TextView txtStatisticsMarketCap,
      @NonNull TextView txtStatisticsOpenPrice, @NonNull TextView txtStatisticsSupply,
      @NonNull TextView txtStatisticsTotalVolume) {
    this.rootView = rootView;
    this.guideline2 = guideline2;
    this.textView10 = textView10;
    this.textView12 = textView12;
    this.textView14 = textView14;
    this.textView16 = textView16;
    this.textView2 = textView2;
    this.textView4 = textView4;
    this.textView7 = textView7;
    this.txtStatisticsAlgoritm = txtStatisticsAlgoritm;
    this.txtStatisticsChange = txtStatisticsChange;
    this.txtStatisticsHigh = txtStatisticsHigh;
    this.txtStatisticsLow = txtStatisticsLow;
    this.txtStatisticsMarketCap = txtStatisticsMarketCap;
    this.txtStatisticsOpenPrice = txtStatisticsOpenPrice;
    this.txtStatisticsSupply = txtStatisticsSupply;
    this.txtStatisticsTotalVolume = txtStatisticsTotalVolume;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ModuleStatisticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ModuleStatisticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.module_statistics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ModuleStatisticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.txt_statistics_algoritm;
      TextView txtStatisticsAlgoritm = ViewBindings.findChildViewById(rootView, id);
      if (txtStatisticsAlgoritm == null) {
        break missingId;
      }

      id = R.id.txt_statistics_change;
      TextView txtStatisticsChange = ViewBindings.findChildViewById(rootView, id);
      if (txtStatisticsChange == null) {
        break missingId;
      }

      id = R.id.txt_statistics_high;
      TextView txtStatisticsHigh = ViewBindings.findChildViewById(rootView, id);
      if (txtStatisticsHigh == null) {
        break missingId;
      }

      id = R.id.txt_statistics_low;
      TextView txtStatisticsLow = ViewBindings.findChildViewById(rootView, id);
      if (txtStatisticsLow == null) {
        break missingId;
      }

      id = R.id.txt_statistics_market_cap;
      TextView txtStatisticsMarketCap = ViewBindings.findChildViewById(rootView, id);
      if (txtStatisticsMarketCap == null) {
        break missingId;
      }

      id = R.id.txt_statistics_open_price;
      TextView txtStatisticsOpenPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtStatisticsOpenPrice == null) {
        break missingId;
      }

      id = R.id.txt_statistics_supply;
      TextView txtStatisticsSupply = ViewBindings.findChildViewById(rootView, id);
      if (txtStatisticsSupply == null) {
        break missingId;
      }

      id = R.id.txt_statistics_total_volume;
      TextView txtStatisticsTotalVolume = ViewBindings.findChildViewById(rootView, id);
      if (txtStatisticsTotalVolume == null) {
        break missingId;
      }

      return new ModuleStatisticsBinding((LinearLayout) rootView, guideline2, textView10,
          textView12, textView14, textView16, textView2, textView4, textView7,
          txtStatisticsAlgoritm, txtStatisticsChange, txtStatisticsHigh, txtStatisticsLow,
          txtStatisticsMarketCap, txtStatisticsOpenPrice, txtStatisticsSupply,
          txtStatisticsTotalVolume);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
