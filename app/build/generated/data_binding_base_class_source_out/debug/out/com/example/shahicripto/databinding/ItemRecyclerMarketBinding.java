// Generated by view binder compiler. Do not edit!
package com.example.shahicripto.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shahicripto.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRecyclerMarketBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imgCoin;

  @NonNull
  public final TextView txtHajm;

  @NonNull
  public final TextView txtNameCoin;

  @NonNull
  public final TextView txtPrice;

  @NonNull
  public final TextView txtTaghir;

  @NonNull
  public final TextView txtTheter;

  private ItemRecyclerMarketBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imgCoin,
      @NonNull TextView txtHajm, @NonNull TextView txtNameCoin, @NonNull TextView txtPrice,
      @NonNull TextView txtTaghir, @NonNull TextView txtTheter) {
    this.rootView = rootView;
    this.imgCoin = imgCoin;
    this.txtHajm = txtHajm;
    this.txtNameCoin = txtNameCoin;
    this.txtPrice = txtPrice;
    this.txtTaghir = txtTaghir;
    this.txtTheter = txtTheter;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRecyclerMarketBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRecyclerMarketBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_recycler_market, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRecyclerMarketBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_coin;
      ImageView imgCoin = ViewBindings.findChildViewById(rootView, id);
      if (imgCoin == null) {
        break missingId;
      }

      id = R.id.txt_hajm;
      TextView txtHajm = ViewBindings.findChildViewById(rootView, id);
      if (txtHajm == null) {
        break missingId;
      }

      id = R.id.txt_name_coin;
      TextView txtNameCoin = ViewBindings.findChildViewById(rootView, id);
      if (txtNameCoin == null) {
        break missingId;
      }

      id = R.id.txt_price;
      TextView txtPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtPrice == null) {
        break missingId;
      }

      id = R.id.txt_taghir;
      TextView txtTaghir = ViewBindings.findChildViewById(rootView, id);
      if (txtTaghir == null) {
        break missingId;
      }

      id = R.id.txt_theter;
      TextView txtTheter = ViewBindings.findChildViewById(rootView, id);
      if (txtTheter == null) {
        break missingId;
      }

      return new ItemRecyclerMarketBinding((ConstraintLayout) rootView, imgCoin, txtHajm,
          txtNameCoin, txtPrice, txtTaghir, txtTheter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
