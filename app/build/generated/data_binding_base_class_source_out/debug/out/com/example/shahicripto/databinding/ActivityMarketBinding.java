// Generated by view binder compiler. Do not edit!
package com.example.shahicripto.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shahicripto.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMarketBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ModuleNewsBinding layoutNews;

  @NonNull
  public final ModuleToolbarBinding layoutToolbar;

  @NonNull
  public final ModuleWatchlistBinding layoutWatchlist;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshMain;

  private ActivityMarketBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ModuleNewsBinding layoutNews, @NonNull ModuleToolbarBinding layoutToolbar,
      @NonNull ModuleWatchlistBinding layoutWatchlist,
      @NonNull SwipeRefreshLayout swipeRefreshMain) {
    this.rootView = rootView;
    this.layoutNews = layoutNews;
    this.layoutToolbar = layoutToolbar;
    this.layoutWatchlist = layoutWatchlist;
    this.swipeRefreshMain = swipeRefreshMain;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMarketBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMarketBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_market, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMarketBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_news;
      View layoutNews = ViewBindings.findChildViewById(rootView, id);
      if (layoutNews == null) {
        break missingId;
      }
      ModuleNewsBinding binding_layoutNews = ModuleNewsBinding.bind(layoutNews);

      id = R.id.layout_toolbar;
      View layoutToolbar = ViewBindings.findChildViewById(rootView, id);
      if (layoutToolbar == null) {
        break missingId;
      }
      ModuleToolbarBinding binding_layoutToolbar = ModuleToolbarBinding.bind(layoutToolbar);

      id = R.id.layout_watchlist;
      View layoutWatchlist = ViewBindings.findChildViewById(rootView, id);
      if (layoutWatchlist == null) {
        break missingId;
      }
      ModuleWatchlistBinding binding_layoutWatchlist = ModuleWatchlistBinding.bind(layoutWatchlist);

      id = R.id.swipe_refresh_main;
      SwipeRefreshLayout swipeRefreshMain = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshMain == null) {
        break missingId;
      }

      return new ActivityMarketBinding((CoordinatorLayout) rootView, binding_layoutNews,
          binding_layoutToolbar, binding_layoutWatchlist, swipeRefreshMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
